<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring on zhangtao&#39;s Blog</title>
    <link>https://zntzhang.github.io/tags/spring/</link>
    <description>Recent content in spring on zhangtao&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 Jul 2020 09:57:14 +0000</lastBuildDate><atom:link href="https://zntzhang.github.io/tags/spring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SpringBoot之Starter</title>
      <link>https://zntzhang.github.io/post/2020-07-27-springboot%E4%B9%8Bstarter/</link>
      <pubDate>Mon, 27 Jul 2020 09:57:14 +0000</pubDate>
      
      <guid>https://zntzhang.github.io/post/2020-07-27-springboot%E4%B9%8Bstarter/</guid>
      <description>SpringBoot之所以流行，是因为Spring Starter模式的提出。Spring Starter的出现，可以让模块开发更加独立化，相互</description>
    </item>
    
    <item>
      <title>拦截器、过滤器、AOP的区别</title>
      <link>https://zntzhang.github.io/post/2020-07-22-%E6%8B%A6%E6%88%AA%E5%99%A8%E8%BF%87%E6%BB%A4%E5%99%A8aop%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Wed, 22 Jul 2020 17:41:58 +0000</pubDate>
      
      <guid>https://zntzhang.github.io/post/2020-07-22-%E6%8B%A6%E6%88%AA%E5%99%A8%E8%BF%87%E6%BB%A4%E5%99%A8aop%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>spring中独有的 在SpringMVC的配置文件中配置 可对请求和响应处理 &amp;lt;mvc:interceptors&amp;gt; &amp;lt;mvc:interceptor&amp;gt; &amp;lt;mvc:mapping path=&amp;#34;/**&amp;#34; /&amp;gt; &amp;lt;bean class=&amp;#34;com.scorpios.atcrowdfunding.web.LoginInterceptor&amp;#34;&amp;gt;&amp;lt;/bean&amp;gt; &amp;lt;/mvc:interceptor&amp;gt; &amp;lt;/mvc:interceptors&amp;gt; 可以针对自定义的url拦截 servlet中有的 可</description>
    </item>
    
    <item>
      <title>Spring容器初始化和解决循环依赖问题的分析</title>
      <link>https://zntzhang.github.io/post/2020-06-25-spring%E5%AE%B9%E5%99%A8%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E8%A7%A3%E5%86%B3%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96%E9%97%AE%E9%A2%98%E7%9A%84%E5%88%86%E6%9E%90/</link>
      <pubDate>Thu, 25 Jun 2020 11:57:28 +0000</pubDate>
      
      <guid>https://zntzhang.github.io/post/2020-06-25-spring%E5%AE%B9%E5%99%A8%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E8%A7%A3%E5%86%B3%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96%E9%97%AE%E9%A2%98%E7%9A%84%E5%88%86%E6%9E%90/</guid>
      <description>Bean 容器找到配置文件中 Spring Bean 的定义。（beanDefintion） Bean 容器利用 Java Reflection API 创建一个Bean的实例。(执行构造方法) 如果涉及到一些属性值 利</description>
    </item>
    
    <item>
      <title>Spring AOP控制事务</title>
      <link>https://zntzhang.github.io/post/2017-12-23-spring-aop%E6%8E%A7%E5%88%B6%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Sat, 23 Dec 2017 09:25:11 +0000</pubDate>
      
      <guid>https://zntzhang.github.io/post/2017-12-23-spring-aop%E6%8E%A7%E5%88%B6%E4%BA%8B%E5%8A%A1/</guid>
      <description>一. spring事务管理的两种方式 1. 编程式事务 自己写事务处理的类，然后调用(较少使用) 2. 声明式事务 2.1 使用基于注解的AOP事务管理 @Trans</description>
    </item>
    
  </channel>
</rss>
