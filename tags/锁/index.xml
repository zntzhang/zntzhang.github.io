<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>锁 on zhangtao&#39;s Blog</title>
    <link>https://zntzhang.github.io/tags/%E9%94%81/</link>
    <description>Recent content in 锁 on zhangtao&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Jan 2024 10:56:17 +0000</lastBuildDate><atom:link href="https://zntzhang.github.io/tags/%E9%94%81/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>模板模式实现分布式锁实战</title>
      <link>https://zntzhang.github.io/post/2024-01-04-%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E6%88%98/</link>
      <pubDate>Thu, 04 Jan 2024 10:56:17 +0000</pubDate>
      
      <guid>https://zntzhang.github.io/post/2024-01-04-%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E6%88%98/</guid>
      <description>前言 分布式锁相信大家都有用过，常见的分布式锁实现方式例如redis、zookeeper、数据库都可以实现，而我们代码中强引用这些分布式锁的代</description>
    </item>
    
    <item>
      <title>通过数据库唯一索引实现分布式锁</title>
      <link>https://zntzhang.github.io/post/2021-05-27-%E9%80%9A%E8%BF%87%E6%95%B0%E6%8D%AE%E5%BA%93%E5%94%AF%E4%B8%80%E7%B4%A2%E5%BC%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</link>
      <pubDate>Thu, 27 May 2021 11:06:14 +0000</pubDate>
      
      <guid>https://zntzhang.github.io/post/2021-05-27-%E9%80%9A%E8%BF%87%E6%95%B0%E6%8D%AE%E5%BA%93%E5%94%AF%E4%B8%80%E7%B4%A2%E5%BC%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</guid>
      <description>伪代码 // 需要加事务 @Transactional @Override public &amp;lt;T&amp;gt; T lock(XxxLock lock, ILockCallback&amp;lt;T&amp;gt; callback) { // 数据库加锁 lock(lock); // 加锁逻辑 T result = callback.callback(); //释放锁 try { lockDao.batchDelete(locks); } catch (Exception e) { logger.error(&amp;#34;mysq</description>
    </item>
    
    <item>
      <title>Java并发编程（原子性、可见性、有序性、synchronized、CAS、volatile、ThreadLocal）笔记</title>
      <link>https://zntzhang.github.io/post/2019-07-14-java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%8E%9F%E5%AD%90%E6%80%A7%E5%8F%AF%E8%A7%81%E6%80%A7%E6%9C%89%E5%BA%8F%E6%80%A7synchronizedcasvolatilethreadlocal%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Sun, 14 Jul 2019 18:02:13 +0000</pubDate>
      
      <guid>https://zntzhang.github.io/post/2019-07-14-java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%8E%9F%E5%AD%90%E6%80%A7%E5%8F%AF%E8%A7%81%E6%80%A7%E6%9C%89%E5%BA%8F%E6%80%A7synchronizedcasvolatilethreadlocal%E7%AC%94%E8%AE%B0/</guid>
      <description>自己网上总结了一些多线程并发的一些文章，如有错误请指教！ 多线程的三大特性 一、原子性 原子是世界上的最小单位，具有不可分割性。比如 a=0；（a非</description>
    </item>
    
    <item>
      <title>数据库之锁与事务</title>
      <link>https://zntzhang.github.io/post/2018-10-22-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E9%94%81%E4%B8%8E%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Mon, 22 Oct 2018 11:38:05 +0000</pubDate>
      
      <guid>https://zntzhang.github.io/post/2018-10-22-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E9%94%81%E4%B8%8E%E4%BA%8B%E5%8A%A1/</guid>
      <description>前言: 我们都知道事务的几种性质，数据库为了维护这些性质，尤其是一致性和隔离性，一般使用加锁这种方式。同时数据库又是个高并发的应用，同一时间会</description>
    </item>
    
  </channel>
</rss>
