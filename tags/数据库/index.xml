<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据库 on zhangtao&#39;s Blog</title>
    <link>https://zhangtaoblog.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
    <description>Recent content in 数据库 on zhangtao&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 07 Feb 2025 10:56:17 +0000</lastBuildDate><atom:link href="https://zhangtaoblog.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一次奇怪的空指针问题分析：事务、死锁与隐式回滚</title>
      <link>https://zhangtaoblog.cn/post/2025-02-07-%E4%B8%80%E6%AC%A1%E5%A5%87%E6%80%AA%E7%9A%84%E7%A9%BA%E6%8C%87%E9%92%88%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90%E4%BA%8B%E5%8A%A1%E6%AD%BB%E9%94%81%E4%B8%8E%E9%9A%90%E5%BC%8F%E5%9B%9E%E6%BB%9A/</link>
      <pubDate>Fri, 07 Feb 2025 10:56:17 +0000</pubDate>
      
      <guid>https://zhangtaoblog.cn/post/2025-02-07-%E4%B8%80%E6%AC%A1%E5%A5%87%E6%80%AA%E7%9A%84%E7%A9%BA%E6%8C%87%E9%92%88%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90%E4%BA%8B%E5%8A%A1%E6%AD%BB%E9%94%81%E4%B8%8E%E9%9A%90%E5%BC%8F%E5%9B%9E%E6%BB%9A/</guid>
      <description>最近我们在排查一个诡异的 空指针异常，整个分析过程可以说是跌宕起伏，最终的结论也颇具隐蔽性。今天就把这个问题分享出来，希望对大家有所帮助。 问题</description>
    </item>
    
    <item>
      <title>优雅数据同步--canal实现mysql同步demo</title>
      <link>https://zhangtaoblog.cn/post/2022-12-23-%E4%BC%98%E9%9B%85%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5--canal%E5%AE%9E%E7%8E%B0mysql%E5%90%8C%E6%AD%A5demo/</link>
      <pubDate>Fri, 23 Dec 2022 17:56:17 +0000</pubDate>
      
      <guid>https://zhangtaoblog.cn/post/2022-12-23-%E4%BC%98%E9%9B%85%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5--canal%E5%AE%9E%E7%8E%B0mysql%E5%90%8C%E6%AD%A5demo/</guid>
      <description>当需要两张表数据同步的时候，我们会想到几种方案？ 最简单的一种方式就是触发器的方式。例如A同步到B,可以通过下面的sql来添加触发器 create trigger tri_trade_update after UPDATE</description>
    </item>
    
    <item>
      <title>公司open api对接遇到的问题解决</title>
      <link>https://zhangtaoblog.cn/post/2022-04-15-%E5%85%AC%E5%8F%B8open-api%E5%AF%B9%E6%8E%A5%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</link>
      <pubDate>Fri, 15 Apr 2022 14:59:33 +0000</pubDate>
      
      <guid>https://zhangtaoblog.cn/post/2022-04-15-%E5%85%AC%E5%8F%B8open-api%E5%AF%B9%E6%8E%A5%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</guid>
      <description>之前在写开放平台的接口的时候，碰到了一些问题，记录一下 由于工期很赶，所以还没来得及自己测试,接口匆匆忙忙上线，当客户在用时，发现查询接口使用</description>
    </item>
    
    <item>
      <title>记一次长事务问题排查思路</title>
      <link>https://zhangtaoblog.cn/post/2021-07-27-%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%95%BF%E4%BA%8B%E5%8A%A1%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E6%80%9D%E8%B7%AF/</link>
      <pubDate>Tue, 27 Jul 2021 17:37:43 +0000</pubDate>
      
      <guid>https://zhangtaoblog.cn/post/2021-07-27-%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%95%BF%E4%BA%8B%E5%8A%A1%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E6%80%9D%E8%B7%AF/</guid>
      <description>今天早上dba群里抛出一个问题说，有一个长事务一直在重复执行我们的一个语句。于是问题抛给我们，我们开始排查。 首先dba告知我们这句sql是重</description>
    </item>
    
    <item>
      <title>通过数据库唯一索引实现分布式锁</title>
      <link>https://zhangtaoblog.cn/post/2021-05-27-%E9%80%9A%E8%BF%87%E6%95%B0%E6%8D%AE%E5%BA%93%E5%94%AF%E4%B8%80%E7%B4%A2%E5%BC%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</link>
      <pubDate>Thu, 27 May 2021 11:06:14 +0000</pubDate>
      
      <guid>https://zhangtaoblog.cn/post/2021-05-27-%E9%80%9A%E8%BF%87%E6%95%B0%E6%8D%AE%E5%BA%93%E5%94%AF%E4%B8%80%E7%B4%A2%E5%BC%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</guid>
      <description>伪代码 // 需要加事务 @Transactional @Override public &amp;lt;T&amp;gt; T lock(XxxLock lock, ILockCallback&amp;lt;T&amp;gt; callback) { // 数据库加锁 lock(lock); // 加锁逻辑 T result = callback.callback(); //释放锁 try { lockDao.batchDelete(locks); } catch (Exception e) { logger.error(&amp;#34;mysq</description>
    </item>
    
    <item>
      <title>事务隔离级别实现-行锁与MCCC</title>
      <link>https://zhangtaoblog.cn/post/2020-11-04-%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB%E5%AE%9E%E7%8E%B0-%E8%A1%8C%E9%94%81%E4%B8%8Emccc/</link>
      <pubDate>Wed, 04 Nov 2020 20:52:55 +0000</pubDate>
      
      <guid>https://zhangtaoblog.cn/post/2020-11-04-%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB%E5%AE%9E%E7%8E%B0-%E8%A1%8C%E9%94%81%E4%B8%8Emccc/</guid>
      <description>我们都知道数据库在并发同时执行的时候，就可能出现脏读、不可重复读、幻读的问题，为了解决这些问题，设置了四种事务的隔离级别，分别是 读未提交：A</description>
    </item>
    
    <item>
      <title>为什么我两次sql查询，查出来的对象引用是同一个？</title>
      <link>https://zhangtaoblog.cn/post/2020-07-22-%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%B8%A4%E6%AC%A1sql%E6%9F%A5%E8%AF%A2%E6%9F%A5%E5%87%BA%E6%9D%A5%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8%E6%98%AF%E5%90%8C%E4%B8%80%E4%B8%AA/</link>
      <pubDate>Wed, 22 Jul 2020 17:42:39 +0000</pubDate>
      
      <guid>https://zhangtaoblog.cn/post/2020-07-22-%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%B8%A4%E6%AC%A1sql%E6%9F%A5%E8%AF%A2%E6%9F%A5%E5%87%BA%E6%9D%A5%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8%E6%98%AF%E5%90%8C%E4%B8%80%E4%B8%AA/</guid>
      <description>回答这个问题，我们需要掌握MyBatis的缓存概念，如果我们两次查询，一次是数据库查询，而第二次直接取得缓存中的数据，那么这两次查询查询的数</description>
    </item>
    
    <item>
      <title>某个表有近千万数据，CRUD比较慢，如何优化？分库分表了是怎么做的？分表分库了有什么问题？有用到中间件么?他们的原理知道么？</title>
      <link>https://zhangtaoblog.cn/post/2019-02-19-%E6%9F%90%E4%B8%AA%E8%A1%A8%E6%9C%89%E8%BF%91%E5%8D%83%E4%B8%87%E6%95%B0%E6%8D%AEcrud%E6%AF%94%E8%BE%83%E6%85%A2%E5%A6%82%E4%BD%95%E4%BC%98%E5%8C%96%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E4%BA%86%E6%98%AF%E6%80%8E%E4%B9%88%E5%81%9A%E7%9A%84%E5%88%86%E8%A1%A8%E5%88%86%E5%BA%93%E4%BA%86%E6%9C%89%E4%BB%80%E4%B9%88%E9%97%AE%E9%A2%98%E6%9C%89%E7%94%A8%E5%88%B0%E4%B8%AD%E9%97%B4%E4%BB%B6%E4%B9%88%E4%BB%96%E4%BB%AC%E7%9A%84%E5%8E%9F%E7%90%86%E7%9F%A5%E9%81%93%E4%B9%88/</link>
      <pubDate>Tue, 19 Feb 2019 10:53:03 +0000</pubDate>
      
      <guid>https://zhangtaoblog.cn/post/2019-02-19-%E6%9F%90%E4%B8%AA%E8%A1%A8%E6%9C%89%E8%BF%91%E5%8D%83%E4%B8%87%E6%95%B0%E6%8D%AEcrud%E6%AF%94%E8%BE%83%E6%85%A2%E5%A6%82%E4%BD%95%E4%BC%98%E5%8C%96%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E4%BA%86%E6%98%AF%E6%80%8E%E4%B9%88%E5%81%9A%E7%9A%84%E5%88%86%E8%A1%A8%E5%88%86%E5%BA%93%E4%BA%86%E6%9C%89%E4%BB%80%E4%B9%88%E9%97%AE%E9%A2%98%E6%9C%89%E7%94%A8%E5%88%B0%E4%B8%AD%E9%97%B4%E4%BB%B6%E4%B9%88%E4%BB%96%E4%BB%AC%E7%9A%84%E5%8E%9F%E7%90%86%E7%9F%A5%E9%81%93%E4%B9%88/</guid>
      <description>数据千万级别之多，占用的存储空间也比较大，可想而知它不会存储在一块连续的物理空间上，而是链式存储在多个碎片的物理空间上。可能对于长字符串的比</description>
    </item>
    
    <item>
      <title>超详细，从零开始搭建阿里云服务器（centos7）第五章 安装mysql</title>
      <link>https://zhangtaoblog.cn/post/2019-02-17-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E4%BA%94%E7%AB%A0-%E5%AE%89%E8%A3%85mysql/</link>
      <pubDate>Sun, 17 Feb 2019 15:21:25 +0000</pubDate>
      
      <guid>https://zhangtaoblog.cn/post/2019-02-17-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E4%BA%94%E7%AB%A0-%E5%AE%89%E8%A3%85mysql/</guid>
      <description>1.下载MySQL源安装包 wget http://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm 安装MySql源 yum -y install mysql57-community-release-el7-11.noarch.rpm 查看一下安装效果 yum repolist enabled | grep mysql.* 2.安装MySQL服务器 yum install mysql-community-server 中间会弹出是与否的选择，选择</description>
    </item>
    
    <item>
      <title>MySql存储引擎和数据结构</title>
      <link>https://zhangtaoblog.cn/post/2018-11-13-mysql%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Tue, 13 Nov 2018 15:49:59 +0000</pubDate>
      
      <guid>https://zhangtaoblog.cn/post/2018-11-13-mysql%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description>InnoDB 支持事务 支持外键 对比MyISAM引擎，写的处理效率会差一些，并且会占用更多的磁盘空间以保留数据和索引 MyISAM 不支持事务 不支持外键 优势是访问速度快</description>
    </item>
    
    <item>
      <title>数据库之锁与事务</title>
      <link>https://zhangtaoblog.cn/post/2018-10-22-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E9%94%81%E4%B8%8E%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Mon, 22 Oct 2018 11:38:05 +0000</pubDate>
      
      <guid>https://zhangtaoblog.cn/post/2018-10-22-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E9%94%81%E4%B8%8E%E4%BA%8B%E5%8A%A1/</guid>
      <description>前言: 我们都知道事务的几种性质，数据库为了维护这些性质，尤其是一致性和隔离性，一般使用加锁这种方式。同时数据库又是个高并发的应用，同一时间会</description>
    </item>
    
    <item>
      <title>MyCAT简单笔记</title>
      <link>https://zhangtaoblog.cn/post/2017-12-23-mycat%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Sat, 23 Dec 2017 15:25:43 +0000</pubDate>
      
      <guid>https://zhangtaoblog.cn/post/2017-12-23-mycat%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/</guid>
      <description>1.为什么要使用MyCAT? MyCAT是mysql中间件,一个可以视为MySQL集群的企业级数据库，用来替代昂贵的Oracle集群 2.MyC</description>
    </item>
    
    <item>
      <title>数据库建立索引的优缺点</title>
      <link>https://zhangtaoblog.cn/post/2017-12-16-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BB%BA%E7%AB%8B%E7%B4%A2%E5%BC%95%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9/</link>
      <pubDate>Sat, 16 Dec 2017 10:30:52 +0000</pubDate>
      
      <guid>https://zhangtaoblog.cn/post/2017-12-16-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BB%BA%E7%AB%8B%E7%B4%A2%E5%BC%95%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9/</guid>
      <description>创建索引可以大大提高系统的性能: 第一，通过创建唯一性索引，可以保证数据库表中每一行数据的唯一性。 第二，可以大大加快数据的检索速度，这也是创建</description>
    </item>
    
  </channel>
</rss>
