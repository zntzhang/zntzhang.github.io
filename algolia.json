[{"author":null,"categories":["WORK"],"content":null,"date":1698749777,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1698749777,"objectID":"293dc979d31b3384395e68645188cb9e","permalink":"https://zntzhang.github.io/post/2023-10-31-%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83zknameservereurekanacos%E4%BB%8B%E7%BB%8D%E4%B8%8E%E5%AF%B9%E6%AF%94/","publishdate":"2023-10-31T10:56:17Z","readingtime":6,"relpermalink":"/post/2023-10-31-%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83zknameservereurekanacos%E4%BB%8B%E7%BB%8D%E4%B8%8E%E5%AF%B9%E6%AF%94/","section":"post","summary":"前言 注册中心的由来 微服务架构是存在着很多跨服务调用，每个服务都存在着多个节点，如果有多个提供者和消费者，当提供者增加/减少或者消费者增加/减","tags":["中间件","java"],"title":"注册中心ZK、nameServer、eureka、Nacos介绍与对比","type":"post","url":"/post/2023-10-31-%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83zknameservereurekanacos%E4%BB%8B%E7%BB%8D%E4%B8%8E%E5%AF%B9%E6%AF%94/","weight":0,"wordcount":2929},{"author":null,"categories":["WORK"],"content":null,"date":1697020843,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1697020843,"objectID":"e1fe33d68b09110991bbd6844351a05e","permalink":"https://zntzhang.github.io/post/2023-10-11-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/","publishdate":"2023-10-11T10:40:43Z","readingtime":2,"relpermalink":"/post/2023-10-11-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/","section":"post","summary":"1.定义 责任链模式是常见的行为型设计模式。当我们需要实现的业务逻辑需要通过多个步骤来处理，并且这些步骤有排列组合的场景时，就可以使用责任链模","tags":["设计模式"],"title":"设计模式之责任链模式","type":"post","url":"/post/2023-10-11-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":688},{"author":null,"categories":["life"],"content":null,"date":1696934592,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1696934592,"objectID":"84661e0b92af71f186cc344719a85d2d","permalink":"https://zntzhang.github.io/post/2023-10-10-%E7%8A%B9%E5%A4%AA%E6%95%99%E4%BC%8A%E6%96%AF%E5%85%B0%E6%95%99%E5%9F%BA%E7%9D%A3%E6%95%99%E7%9A%84%E5%8E%86%E5%8F%B2%E7%BA%A0%E8%91%9B/","publishdate":"2023-10-10T10:43:12Z","readingtime":4,"relpermalink":"/post/2023-10-10-%E7%8A%B9%E5%A4%AA%E6%95%99%E4%BC%8A%E6%96%AF%E5%85%B0%E6%95%99%E5%9F%BA%E7%9D%A3%E6%95%99%E7%9A%84%E5%8E%86%E5%8F%B2%E7%BA%A0%E8%91%9B/","section":"post","summary":"上帝创造了亚当和夏娃，命他们看守伊甸园，叮嘱他们里面的什么果实都可以吃，但是“知善恶果”苹果不能吃。有一天蛇“撒旦”诱惑了夏娃，让夏娃吃了苹","tags":["宗教"],"title":"犹太教、伊斯兰教、基督教的历史纠葛","type":"post","url":"/post/2023-10-10-%E7%8A%B9%E5%A4%AA%E6%95%99%E4%BC%8A%E6%96%AF%E5%85%B0%E6%95%99%E5%9F%BA%E7%9D%A3%E6%95%99%E7%9A%84%E5%8E%86%E5%8F%B2%E7%BA%A0%E8%91%9B/","weight":0,"wordcount":1937},{"author":null,"categories":["life"],"content":null,"date":1694342592,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1694342592,"objectID":"64a0992157aed09ee3fb4df8eca10732","permalink":"https://zntzhang.github.io/post/2023-09-11-%E5%88%86%E7%A8%8E%E5%88%B6%E6%94%B9%E9%9D%A9/","publishdate":"2023-09-10T10:43:12Z","readingtime":1,"relpermalink":"/post/2023-09-11-%E5%88%86%E7%A8%8E%E5%88%B6%E6%94%B9%E9%9D%A9/","section":"post","summary":"在上世纪90年代，由于国内外的多重危机，中央财政陷入了严重的困境，甚至不得不向地方借款的情况屡见不鲜。 朱镕基上任总理后，果断启动了大规模改革","tags":["经济"],"title":"分税制改革","type":"post","url":"/post/2023-09-11-%E5%88%86%E7%A8%8E%E5%88%B6%E6%94%B9%E9%9D%A9/","weight":0,"wordcount":454},{"author":null,"categories":["WORK"],"content":null,"date":1682505792,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1682505792,"objectID":"88f279e6dd2afe265855a2e2bb8a3b4a","permalink":"https://zntzhang.github.io/post/2023-04-26-%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%AD%BB%E9%94%81%E9%97%AE%E9%A2%98/","publishdate":"2023-04-26T10:43:12Z","readingtime":3,"relpermalink":"/post/2023-04-26-%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%AD%BB%E9%94%81%E9%97%AE%E9%A2%98/","section":"post","summary":"最近在做一个需求，碰到了死锁的问题，记录下解决问题的过程 背景 这个需求要改动一个接口，我这边称为A接口，原先的逻辑是A接口内部会调用c方法，c","tags":["java"],"title":"记一次死锁问题","type":"post","url":"/post/2023-04-26-%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%AD%BB%E9%94%81%E9%97%AE%E9%A2%98/","weight":0,"wordcount":1426},{"author":null,"categories":["WORK"],"content":null,"date":1682444546,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1682444546,"objectID":"2fcd69d1d3a4c85fa0999af54f633a23","permalink":"https://zntzhang.github.io/post/2023-04-25-%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%BA%BF%E4%B8%8Aoom%E6%8E%92%E6%9F%A5%E8%BF%87%E7%A8%8B/","publishdate":"2023-04-25T17:42:26Z","readingtime":2,"relpermalink":"/post/2023-04-25-%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%BA%BF%E4%B8%8Aoom%E6%8E%92%E6%9F%A5%E8%BF%87%E7%A8%8B/","section":"post","summary":"故障 线上pda服务器出现卡慢，由于pda服务器主要是只是做了网关路由的服务，于是我们猜测是某个下游服务出现了问题，通过elk查看慢请求发现基","tags":["jvm","java","服务器"],"title":"记一次线上oom排查过程","type":"post","url":"/post/2023-04-25-%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%BA%BF%E4%B8%8Aoom%E6%8E%92%E6%9F%A5%E8%BF%87%E7%A8%8B/","weight":0,"wordcount":766},{"author":null,"categories":["WORK"],"content":null,"date":1679514074,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1679514074,"objectID":"eb7460e04d340bbb48f865b10a6bffb5","permalink":"https://zntzhang.github.io/post/2023-03-22-%E4%BB%8E%E4%BD%8D%E8%BF%90%E7%AE%97%E7%90%86%E8%A7%A3%E4%BD%8D%E5%9B%BE%E4%BD%8D%E6%8E%A9%E7%A0%81/","publishdate":"2023-03-22T19:41:14Z","readingtime":4,"relpermalink":"/post/2023-03-22-%E4%BB%8E%E4%BD%8D%E8%BF%90%E7%AE%97%E7%90%86%E8%A7%A3%E4%BD%8D%E5%9B%BE%E4%BD%8D%E6%8E%A9%E7%A0%81/","section":"post","summary":"位图是一种较难理解的数据结构，想了解位图，我需要先温习一下基础，复习下一些二进制的知识 1个字节=8个二进制位 二进制每逢二进一，下面是二进制对","tags":["java","数据结构","java","数据结构"],"title":"从位运算理解位图，位掩码","type":"post","url":"/post/2023-03-22-%E4%BB%8E%E4%BD%8D%E8%BF%90%E7%AE%97%E7%90%86%E8%A7%A3%E4%BD%8D%E5%9B%BE%E4%BD%8D%E6%8E%A9%E7%A0%81/","weight":0,"wordcount":1547},{"author":null,"categories":["WORK"],"content":null,"date":1671818177,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1671818177,"objectID":"a435c4cb923149e899fe776924249408","permalink":"https://zntzhang.github.io/post/2022-12-23-%E4%BC%98%E9%9B%85%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5--canal%E5%AE%9E%E7%8E%B0mysql%E5%90%8C%E6%AD%A5demo/","publishdate":"2022-12-23T17:56:17Z","readingtime":4,"relpermalink":"/post/2022-12-23-%E4%BC%98%E9%9B%85%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5--canal%E5%AE%9E%E7%8E%B0mysql%E5%90%8C%E6%AD%A5demo/","section":"post","summary":"当需要两张表数据同步的时候，我们会想到几种方案？ 最简单的一种方式就是触发器的方式。例如A同步到B,可以通过下面的sql来添加触发器 create trigger tri_trade_update after UPDATE","tags":["数据库","mysql","docker","canal"],"title":"优雅数据同步--canal实现mysql同步demo","type":"post","url":"/post/2022-12-23-%E4%BC%98%E9%9B%85%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5--canal%E5%AE%9E%E7%8E%B0mysql%E5%90%8C%E6%AD%A5demo/","weight":0,"wordcount":1760},{"author":null,"categories":["WORK"],"content":null,"date":1667336678,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1667336678,"objectID":"6c4a5b544184df53ff9f64119f76431b","permalink":"https://zntzhang.github.io/post/2022-11-01-%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E7%9A%84%E5%9D%91%E9%87%8D%E5%A4%8D%E6%B6%88%E8%B4%B9%E9%A1%BA%E5%BA%8F%E6%B6%88%E8%B4%B9%E6%B6%88%E6%81%AF%E4%B8%A2%E5%A4%B1/","publishdate":"2022-11-01T21:04:38Z","readingtime":4,"relpermalink":"/post/2022-11-01-%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E7%9A%84%E5%9D%91%E9%87%8D%E5%A4%8D%E6%B6%88%E8%B4%B9%E9%A1%BA%E5%BA%8F%E6%B6%88%E8%B4%B9%E6%B6%88%E6%81%AF%E4%B8%A2%E5%A4%B1/","section":"post","summary":"1.rabbitmq erlang语言开发，时效性最高 2.rocketmq 吞吐量高，时效性高，实现了事务消息，但在大数据方面需要自己写代码支持 3.kafka 超高的吞吐量，消息较少时可能会有延","tags":["mq","rabbitmq","kafka","分布式"],"title":"消息队列的坑（重复消费、顺序消费、消息丢失）","type":"post","url":"/post/2022-11-01-%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E7%9A%84%E5%9D%91%E9%87%8D%E5%A4%8D%E6%B6%88%E8%B4%B9%E9%A1%BA%E5%BA%8F%E6%B6%88%E8%B4%B9%E6%B6%88%E6%81%AF%E4%B8%A2%E5%A4%B1/","weight":0,"wordcount":1989},{"author":null,"categories":["WORK"],"content":null,"date":1660683897,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1660683897,"objectID":"df9df4f18cc9e14463d0c4570225379e","permalink":"https://zntzhang.github.io/post/2022-08-16-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/","publishdate":"2022-08-16T21:04:57Z","readingtime":3,"relpermalink":"/post/2022-08-16-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/","section":"post","summary":"观察者模式是我现在公司用的很广泛的一种设计模式，同时也十分好用，下面我推荐给大家 首先我们要明白为什么需要观察者模式，我们举个例子分析。比如我","tags":["设计模式","设计模式","观察者模式","java"],"title":"设计模式之观察者模式","type":"post","url":"/post/2022-08-16-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":1241},{"author":null,"categories":["WORK"],"content":null,"date":1659535359,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1659535359,"objectID":"04f1d7fcee9405d471d6662d42db2f0c","permalink":"https://zntzhang.github.io/post/2022-08-03-%E5%AD%A6%E4%B9%A0es%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E4%BA%8C--es%E5%9F%BA%E7%A1%80%E4%BA%86%E8%A7%A3/","publishdate":"2022-08-03T14:02:39Z","readingtime":1,"relpermalink":"/post/2022-08-03-%E5%AD%A6%E4%B9%A0es%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E4%BA%8C--es%E5%9F%BA%E7%A1%80%E4%BA%86%E8%A7%A3/","section":"post","summary":"ES是一个分布式的全文搜索引擎 我们对数据库比较熟悉，刚开始了解ES时可以跟MySQL进行对比 MySQL是关系型数据库，里面的数据是一行行数据","tags":["es","elasticsearch"],"title":"学习ES搜索引擎(二)--ES基础了解","type":"post","url":"/post/2022-08-03-%E5%AD%A6%E4%B9%A0es%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E4%BA%8C--es%E5%9F%BA%E7%A1%80%E4%BA%86%E8%A7%A3/","weight":0,"wordcount":391},{"author":null,"categories":["WORK"],"content":null,"date":1659526482,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1659526482,"objectID":"30a6b594b4c19c4d58587fcf57a3057b","permalink":"https://zntzhang.github.io/post/2022-08-03-%E5%AD%A6%E4%B9%A0es%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E4%B8%80--mac%E5%AE%89%E8%A3%85es%E5%92%8Ckibana%E5%8F%8A%E7%AE%80%E5%8D%95%E5%AE%9E%E7%94%A8/","publishdate":"2022-08-03T11:34:42Z","readingtime":2,"relpermalink":"/post/2022-08-03-%E5%AD%A6%E4%B9%A0es%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E4%B8%80--mac%E5%AE%89%E8%A3%85es%E5%92%8Ckibana%E5%8F%8A%E7%AE%80%E5%8D%95%E5%AE%9E%E7%94%A8/","section":"post","summary":"最近打算研究下ES和Kibana,打算先自己安装学习一下。通常我们服务器会通过log4j会把服务器日志输出到到控制台上来或者log文件中。但","tags":["es","elasticsearch"],"title":"学习ES搜索引擎(一)--Mac安装ES和Kibana及简单实用","type":"post","url":"/post/2022-08-03-%E5%AD%A6%E4%B9%A0es%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E4%B8%80--mac%E5%AE%89%E8%A3%85es%E5%92%8Ckibana%E5%8F%8A%E7%AE%80%E5%8D%95%E5%AE%9E%E7%94%A8/","weight":0,"wordcount":755},{"author":null,"categories":["WORK"],"content":null,"date":1654707967,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1654707967,"objectID":"d75228060922392b633310973b392ea1","permalink":"https://zntzhang.github.io/post/2022-06-08-threadlocal%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E6%88%98/","publishdate":"2022-06-08T17:06:07Z","readingtime":5,"relpermalink":"/post/2022-06-08-threadlocal%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E6%88%98/","section":"post","summary":"ThreadLocal我会将其解释为线程上下文变量，当我们想要在方法间传递参数，又不想很挫的将每个方法都参数列表都加上这个参数时，可以使用它","tags":["java","java"],"title":"ThreadLocal原理与实战","type":"post","url":"/post/2022-06-08-threadlocal%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E6%88%98/","weight":0,"wordcount":2199},{"author":null,"categories":["WORK"],"content":null,"date":1653059248,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1653059248,"objectID":"7347dd68c64aa756ec74256cfc84d6f1","permalink":"https://zntzhang.github.io/post/2022-05-20-github-action%E4%BD%BF%E7%94%A8/","publishdate":"2022-05-20T15:07:28Z","readingtime":2,"relpermalink":"/post/2022-05-20-github-action%E4%BD%BF%E7%94%A8/","section":"post","summary":"当我们需要发布服务时，往往是怎么操作的？最古老的方法无非是本地打包，然后ssh到服务器上，上传新包，删除老包，执行脚本启动。这个过程自己操作","tags":["linux","github","服务器","ssh"],"title":"github action使用","type":"post","url":"/post/2022-05-20-github-action%E4%BD%BF%E7%94%A8/","weight":0,"wordcount":506},{"author":null,"categories":["WORK"],"content":null,"date":1650034773,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1650034773,"objectID":"00e0ae47431a2e2a5f11f6bd04ec4d32","permalink":"https://zntzhang.github.io/post/2022-04-15-%E5%85%AC%E5%8F%B8open-api%E5%AF%B9%E6%8E%A5%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/","publishdate":"2022-04-15T14:59:33Z","readingtime":3,"relpermalink":"/post/2022-04-15-%E5%85%AC%E5%8F%B8open-api%E5%AF%B9%E6%8E%A5%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/","section":"post","summary":"之前在写开放平台的接口的时候，碰到了一些问题，记录一下 由于工期很赶，所以还没来得及自己测试,接口匆匆忙忙上线，当客户在用时，发现查询接口使用","tags":["数据库","java","mysql","sql"],"title":"公司open api对接遇到的问题解决","type":"post","url":"/post/2022-04-15-%E5%85%AC%E5%8F%B8open-api%E5%AF%B9%E6%8E%A5%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/","weight":0,"wordcount":1173},{"author":null,"categories":["WORK"],"content":null,"date":1644153811,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1644153811,"objectID":"ac90c28c39d1b45e6f9babcde52337f4","permalink":"https://zntzhang.github.io/post/2022-02-06-%E7%94%A8java%E7%BB%99%E5%A5%B3%E5%8F%8B%E8%87%AA%E5%8A%A8%E6%8F%90%E4%BA%A4%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC/","publishdate":"2022-02-06T13:23:31Z","readingtime":3,"relpermalink":"/post/2022-02-06-%E7%94%A8java%E7%BB%99%E5%A5%B3%E5%8F%8B%E8%87%AA%E5%8A%A8%E6%8F%90%E4%BA%A4%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC/","section":"post","summary":"女朋友每天早上都需要登录某工作网站提交一项内容，其实在程序员看来，这些都是可以用代码自动化解决的，于是我开始加班加点搞了起来。 整理需求 首先她","tags":["java","java","自动化","spring boot"],"title":"用Java给女友自动提交工作内容的自动化脚本","type":"post","url":"/post/2022-02-06-%E7%94%A8java%E7%BB%99%E5%A5%B3%E5%8F%8B%E8%87%AA%E5%8A%A8%E6%8F%90%E4%BA%A4%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC/","weight":0,"wordcount":1047},{"author":null,"categories":["WORK"],"content":null,"date":1640044826,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1640044826,"objectID":"019c180d868ba7ef7ea019e6d1f6fbdf","permalink":"https://zntzhang.github.io/post/2021-12-21-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95--mockito+junit/","publishdate":"2021-12-21T00:00:26Z","readingtime":2,"relpermalink":"/post/2021-12-21-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95--mockito+junit/","section":"post","summary":"最近领导开始要求写代码需要写单元测试了。于是花了点时间研究下单元测试。 一、目的 单元测试适合一些项目复杂，启动一次项目要花很大成本的项目，这样","tags":["java","单元测试"],"title":"单元测试--Mockito+JUnit","type":"post","url":"/post/2021-12-21-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95--mockito+junit/","weight":0,"wordcount":845},{"author":null,"categories":["WORK"],"content":null,"date":1636304219,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1636304219,"objectID":"14c398fa96b19b9e31ae7cce0211fc65","permalink":"https://zntzhang.github.io/post/2021-11-07-%E6%8D%9E%E5%8F%96%E5%A4%A7%E9%87%8F%E6%95%B0%E6%8D%AE%E6%85%A2%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/","publishdate":"2021-11-07T16:56:59Z","readingtime":1,"relpermalink":"/post/2021-11-07-%E6%8D%9E%E5%8F%96%E5%A4%A7%E9%87%8F%E6%95%B0%E6%8D%AE%E6%85%A2%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/","section":"post","summary":"双11期间这家客户积压了5w笔订单没有发货，所以客户反映每次计算都很慢，需要几十秒的时间。波次计算的代码需要把系统中审核的订单捞出来后进行计","tags":["java","并发","优化"],"title":"捞取大量数据慢查询优化","type":"post","url":"/post/2021-11-07-%E6%8D%9E%E5%8F%96%E5%A4%A7%E9%87%8F%E6%95%B0%E6%8D%AE%E6%85%A2%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/","weight":0,"wordcount":300},{"author":null,"categories":["WORK"],"content":null,"date":1627407463,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1627407463,"objectID":"fb9faa7dad52c1e89bcf40c7661acf27","permalink":"https://zntzhang.github.io/post/2021-07-27-%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%95%BF%E4%BA%8B%E5%8A%A1%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E6%80%9D%E8%B7%AF/","publishdate":"2021-07-27T17:37:43Z","readingtime":2,"relpermalink":"/post/2021-07-27-%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%95%BF%E4%BA%8B%E5%8A%A1%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E6%80%9D%E8%B7%AF/","section":"post","summary":"今天早上dba群里抛出一个问题说，有一个长事务一直在重复执行我们的一个语句。于是问题抛给我们，我们开始排查。 首先dba告知我们这句sql是重","tags":["数据库"],"title":"记一次长事务问题排查思路","type":"post","url":"/post/2021-07-27-%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%95%BF%E4%BA%8B%E5%8A%A1%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E6%80%9D%E8%B7%AF/","weight":0,"wordcount":597},{"author":null,"categories":["WORK"],"content":null,"date":1622113574,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1622113574,"objectID":"c5c555e760b30eb450264adaeb8c532e","permalink":"https://zntzhang.github.io/post/2021-05-27-%E9%80%9A%E8%BF%87%E6%95%B0%E6%8D%AE%E5%BA%93%E5%94%AF%E4%B8%80%E7%B4%A2%E5%BC%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/","publishdate":"2021-05-27T11:06:14Z","readingtime":2,"relpermalink":"/post/2021-05-27-%E9%80%9A%E8%BF%87%E6%95%B0%E6%8D%AE%E5%BA%93%E5%94%AF%E4%B8%80%E7%B4%A2%E5%BC%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/","section":"post","summary":"伪代码 // 需要加事务 @Transactional @Override public \u0026lt;T\u0026gt; T lock(XxxLock lock, ILockCallback\u0026lt;T\u0026gt; callback) { // 数据库加锁 lock(lock); // 加锁逻辑 T result = callback.callback(); //释放锁 try { lockDao.batchDelete(locks); } catch (Exception e) { logger.error(\u0026#34;mysq","tags":["java","锁","数据库"],"title":"通过数据库唯一索引实现分布式锁","type":"post","url":"/post/2021-05-27-%E9%80%9A%E8%BF%87%E6%95%B0%E6%8D%AE%E5%BA%93%E5%94%AF%E4%B8%80%E7%B4%A2%E5%BC%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/","weight":0,"wordcount":780},{"author":null,"categories":["WORK"],"content":null,"date":1604523175,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1604523175,"objectID":"667af7233b19219b1a741172a6564092","permalink":"https://zntzhang.github.io/post/2020-11-04-%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB%E5%AE%9E%E7%8E%B0-%E8%A1%8C%E9%94%81%E4%B8%8Emccc/","publishdate":"2020-11-04T20:52:55Z","readingtime":2,"relpermalink":"/post/2020-11-04-%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB%E5%AE%9E%E7%8E%B0-%E8%A1%8C%E9%94%81%E4%B8%8Emccc/","section":"post","summary":"我们都知道数据库在并发同时执行的时候，就可能出现脏读、不可重复读、幻读的问题，为了解决这些问题，设置了四种事务的隔离级别，分别是 读未提交：A","tags":["数据库"],"title":"事务隔离级别实现-行锁与MCCC","type":"post","url":"/post/2020-11-04-%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB%E5%AE%9E%E7%8E%B0-%E8%A1%8C%E9%94%81%E4%B8%8Emccc/","weight":0,"wordcount":857},{"author":null,"categories":["WORK"],"content":null,"date":1596559721,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1596559721,"objectID":"6d101969742b5fea0346ce98e57a6c1d","permalink":"https://zntzhang.github.io/post/2020-08-04-%E5%8C%BF%E5%90%8D%E5%86%85%E9%83%A8%E7%B1%BB%E4%BD%BF%E7%94%A8/","publishdate":"2020-08-04T16:48:41Z","readingtime":2,"relpermalink":"/post/2020-08-04-%E5%8C%BF%E5%90%8D%E5%86%85%E9%83%A8%E7%B1%BB%E4%BD%BF%E7%94%A8/","section":"post","summary":"在我们开发中，匿名内部类用的还是比较多的，笔者有点忘了一些细节，所以今天带大家复习一下匿名内部类 匿名内部类既没有名字的内部类 正因为没有名字，","tags":["java","java","开发语言","后端"],"title":"匿名内部类使用","type":"post","url":"/post/2020-08-04-%E5%8C%BF%E5%90%8D%E5%86%85%E9%83%A8%E7%B1%BB%E4%BD%BF%E7%94%A8/","weight":0,"wordcount":836},{"author":null,"categories":["WORK"],"content":null,"date":1596474815,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1596474815,"objectID":"e831a1e962ae78bd9f3a412aa4263495","permalink":"https://zntzhang.github.io/post/2020-08-03-jvm%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/","publishdate":"2020-08-03T17:13:35Z","readingtime":5,"relpermalink":"/post/2020-08-03-jvm%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/","section":"post","summary":"每个线程都有： 程序计数器：记录了上下文切换的位置 虚拟机栈：由栈帧组成，入栈出栈 本地方法栈：Native方法 每个线程共享： 堆：对象 方法区（jd","tags":["java"],"title":"JVM相关知识点总结","type":"post","url":"/post/2020-08-03-jvm%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/","weight":0,"wordcount":2197},{"author":null,"categories":["WORK"],"content":null,"date":1595843834,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1595843834,"objectID":"6df1784670843a9f1470a7132efde42b","permalink":"https://zntzhang.github.io/post/2020-07-27-springboot%E4%B9%8Bstarter/","publishdate":"2020-07-27T09:57:14Z","readingtime":5,"relpermalink":"/post/2020-07-27-springboot%E4%B9%8Bstarter/","section":"post","summary":"SpringBoot之所以流行，是因为Spring Starter模式的提出。Spring Starter的出现，可以让模块开发更加独立化，相互","tags":["java","spring"],"title":"SpringBoot之Starter","type":"post","url":"/post/2020-07-27-springboot%E4%B9%8Bstarter/","weight":0,"wordcount":2077},{"author":null,"categories":["WORK"],"content":null,"date":1595843804,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1595843804,"objectID":"33b3c86063eabb372e92363bbf069509","permalink":"https://zntzhang.github.io/post/2020-07-27-%E6%80%BB%E7%BB%93%E8%87%AA%E5%B7%B1%E5%B8%B8%E7%94%A8%E7%9A%84jdk8%E5%86%99%E6%B3%95streamfunctionoptional/","publishdate":"2020-07-27T09:56:44Z","readingtime":2,"relpermalink":"/post/2020-07-27-%E6%80%BB%E7%BB%93%E8%87%AA%E5%B7%B1%E5%B8%B8%E7%94%A8%E7%9A%84jdk8%E5%86%99%E6%B3%95streamfunctionoptional/","section":"post","summary":"特别要注意的是list集合，我们sql查询返回的list或者stream处理完的list都不可能是null，所以不需要判断是否为null 遍历","tags":["java"],"title":"总结自己常用的JDK8写法（stream,function,optional）","type":"post","url":"/post/2020-07-27-%E6%80%BB%E7%BB%93%E8%87%AA%E5%B7%B1%E5%B8%B8%E7%94%A8%E7%9A%84jdk8%E5%86%99%E6%B3%95streamfunctionoptional/","weight":0,"wordcount":888},{"author":null,"categories":["WORK"],"content":null,"date":1595843776,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1595843776,"objectID":"8f3a221ae88382557a65963c4bca7005","permalink":"https://zntzhang.github.io/post/2020-07-27-%E9%AB%98%E5%8F%AF%E7%94%A8%E6%96%B9%E6%A1%88%E5%92%8C%E4%B8%80%E8%87%B4%E6%80%A7hash/","publishdate":"2020-07-27T09:56:16Z","readingtime":2,"relpermalink":"/post/2020-07-27-%E9%AB%98%E5%8F%AF%E7%94%A8%E6%96%B9%E6%A1%88%E5%92%8C%E4%B8%80%E8%87%B4%E6%80%A7hash/","section":"post","summary":"其实大部分中间件都逃不过这两种模式 这种模式的特点是有一Master多slave，一般采用读写分离的方式，只从master中写，然后同步给sl","tags":["linux","java"],"title":"高可用方案和一致性hash","type":"post","url":"/post/2020-07-27-%E9%AB%98%E5%8F%AF%E7%94%A8%E6%96%B9%E6%A1%88%E5%92%8C%E4%B8%80%E8%87%B4%E6%80%A7hash/","weight":0,"wordcount":736},{"author":null,"categories":["WORK"],"content":null,"date":1595843742,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1595843742,"objectID":"9585fdf515fb10fbae43eefa3a557294","permalink":"https://zntzhang.github.io/post/2020-07-27-spi%E6%9C%BA%E5%88%B6%E5%BA%94%E7%94%A8/","publishdate":"2020-07-27T09:55:42Z","readingtime":3,"relpermalink":"/post/2020-07-27-spi%E6%9C%BA%E5%88%B6%E5%BA%94%E7%94%A8/","section":"post","summary":"为什么要使用SPI? 系统设计的各个抽象，往往有很多不同的实现方案，在面向的对象的设计里，一般推荐模块之间基于接口编程，模块之间不对实现类进行","tags":["java"],"title":"SPI机制应用","type":"post","url":"/post/2020-07-27-spi%E6%9C%BA%E5%88%B6%E5%BA%94%E7%94%A8/","weight":0,"wordcount":1270},{"author":null,"categories":["WORK"],"content":null,"date":1595843711,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1595843711,"objectID":"9db842af8a455aaa6a50daa57d8a983d","permalink":"https://zntzhang.github.io/post/2020-07-27-oomcpu%E9%A3%99%E5%8D%87java%E8%BF%9B%E7%A8%8B%E8%A2%AB%E6%9D%80-%E7%BA%BF%E4%B8%8A%E6%95%85%E9%9A%9C%E5%88%86%E6%9E%90/","publishdate":"2020-07-27T09:55:11Z","readingtime":3,"relpermalink":"/post/2020-07-27-oomcpu%E9%A3%99%E5%8D%87java%E8%BF%9B%E7%A8%8B%E8%A2%AB%E6%9D%80-%E7%BA%BF%E4%B8%8A%E6%95%85%E9%9A%9C%E5%88%86%E6%9E%90/","section":"post","summary":"关于OOM出现的情况，一般可以猜想是内存泄露，或者是加载了过多class或者创建了过多对象，给JVM分配的内存不够导致 dump分析 首先登陆机","tags":["linux"],"title":"OOM、CPU飙升、Java进程被杀 线上故障分析","type":"post","url":"/post/2020-07-27-oomcpu%E9%A3%99%E5%8D%87java%E8%BF%9B%E7%A8%8B%E8%A2%AB%E6%9D%80-%E7%BA%BF%E4%B8%8A%E6%95%85%E9%9A%9C%E5%88%86%E6%9E%90/","weight":0,"wordcount":1059},{"author":null,"categories":["WORK"],"content":null,"date":1595600849,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1595600849,"objectID":"7bcb69e073bdad2ab8486bb320dccbd0","permalink":"https://zntzhang.github.io/post/2020-07-24-redis%E9%9D%A2%E8%AF%95%E5%B8%B8%E8%80%83%E9%A2%98/","publishdate":"2020-07-24T14:27:29Z","readingtime":3,"relpermalink":"/post/2020-07-24-redis%E9%9D%A2%E8%AF%95%E5%B8%B8%E8%80%83%E9%A2%98/","section":"post","summary":"1. MySQL 和 Redis的区别 2. Redis 和 memcached 的区别 Redis 和 memcached 都是从内存中读取，memcached比Redis读取更快， 但是redis有很多优点 redis支持更","tags":["Redis"],"title":"Redis面试常考题","type":"post","url":"/post/2020-07-24-redis%E9%9D%A2%E8%AF%95%E5%B8%B8%E8%80%83%E9%A2%98/","weight":0,"wordcount":1188},{"author":null,"categories":["WORK"],"content":null,"date":1595497510,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1595497510,"objectID":"d4db91cec54f02d0409b6d7f42504044","permalink":"https://zntzhang.github.io/post/2020-07-23-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E5%85%AD%E7%AB%A0-%E5%AE%89%E8%A3%85maven%E5%92%8Crocketmq/","publishdate":"2020-07-23T09:45:10Z","readingtime":1,"relpermalink":"/post/2020-07-23-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E5%85%AD%E7%AB%A0-%E5%AE%89%E8%A3%85maven%E5%92%8Crocketmq/","section":"post","summary":"RocketMq是真的难搭，废了好多功夫才搭建完，碰到了好多坑，下面我把我吃到的坑记录下来 1. 安装Maven 1.1 下载maven wget http://mirrors.shu.edu.cn/apache/maven/maven-3/3.6.0/source/apache-maven-3.6.0-src.tar.gz 解压maven","tags":["mq","linux"],"title":"超详细，从零开始搭建阿里云服务器（centos7）第六章 安装Maven和RocketMq","type":"post","url":"/post/2020-07-23-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E5%85%AD%E7%AB%A0-%E5%AE%89%E8%A3%85maven%E5%92%8Crocketmq/","weight":0,"wordcount":498},{"author":null,"categories":["WORK"],"content":null,"date":1595439759,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1595439759,"objectID":"0a115b2e321e062f4a40fa3318e7185b","permalink":"https://zntzhang.github.io/post/2020-07-22-%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%B8%A4%E6%AC%A1sql%E6%9F%A5%E8%AF%A2%E6%9F%A5%E5%87%BA%E6%9D%A5%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8%E6%98%AF%E5%90%8C%E4%B8%80%E4%B8%AA/","publishdate":"2020-07-22T17:42:39Z","readingtime":9,"relpermalink":"/post/2020-07-22-%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%B8%A4%E6%AC%A1sql%E6%9F%A5%E8%AF%A2%E6%9F%A5%E5%87%BA%E6%9D%A5%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8%E6%98%AF%E5%90%8C%E4%B8%80%E4%B8%AA/","section":"post","summary":"回答这个问题，我们需要掌握MyBatis的缓存概念，如果我们两次查询，一次是数据库查询，而第二次直接取得缓存中的数据，那么这两次查询查询的数","tags":["数据库"],"title":"为什么我两次sql查询，查出来的对象引用是同一个？","type":"post","url":"/post/2020-07-22-%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%B8%A4%E6%AC%A1sql%E6%9F%A5%E8%AF%A2%E6%9F%A5%E5%87%BA%E6%9D%A5%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8%E6%98%AF%E5%90%8C%E4%B8%80%E4%B8%AA/","weight":0,"wordcount":4065},{"author":null,"categories":["WORK"],"content":null,"date":1595439718,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1595439718,"objectID":"01d2e631f8eb9ff749f18da08b0f3c82","permalink":"https://zntzhang.github.io/post/2020-07-22-%E6%8B%A6%E6%88%AA%E5%99%A8%E8%BF%87%E6%BB%A4%E5%99%A8aop%E7%9A%84%E5%8C%BA%E5%88%AB/","publishdate":"2020-07-22T17:41:58Z","readingtime":1,"relpermalink":"/post/2020-07-22-%E6%8B%A6%E6%88%AA%E5%99%A8%E8%BF%87%E6%BB%A4%E5%99%A8aop%E7%9A%84%E5%8C%BA%E5%88%AB/","section":"post","summary":"spring中独有的 在SpringMVC的配置文件中配置 可对请求和响应处理 \u0026lt;mvc:interceptors\u0026gt; \u0026lt;mvc:interceptor\u0026gt; \u0026lt;mvc:mapping path=\u0026#34;/**\u0026#34; /\u0026gt; \u0026lt;bean class=\u0026#34;com.scorpios.atcrowdfunding.web.LoginInterceptor\u0026#34;\u0026gt;\u0026lt;/bean\u0026gt; \u0026lt;/mvc:interceptor\u0026gt; \u0026lt;/mvc:interceptors\u0026gt; 可以针对自定义的url拦截 servlet中有的 可","tags":["spring","java"],"title":"拦截器、过滤器、AOP的区别","type":"post","url":"/post/2020-07-22-%E6%8B%A6%E6%88%AA%E5%99%A8%E8%BF%87%E6%BB%A4%E5%99%A8aop%E7%9A%84%E5%8C%BA%E5%88%AB/","weight":0,"wordcount":172},{"author":null,"categories":["WORK"],"content":null,"date":1593876556,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1593876556,"objectID":"34c7a024f04a146d3d4864966abc9dfb","permalink":"https://zntzhang.github.io/post/2020-07-04-%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8Daqsreetrantlockcountdownlatchcyclicbarriersemaphore/","publishdate":"2020-07-04T15:29:16Z","readingtime":2,"relpermalink":"/post/2020-07-04-%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8Daqsreetrantlockcountdownlatchcyclicbarriersemaphore/","section":"post","summary":"AQS，既AbstractQueuedSynchronizer, 是JUC包实现同步的基础工具，是一个抽象类。 在AQS中，定义了一个volat","tags":["并发","java"],"title":"简单介绍AQS、ReetrantLock、CountDownLatch、CyclicBarrier、Semaphore","type":"post","url":"/post/2020-07-04-%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8Daqsreetrantlockcountdownlatchcyclicbarriersemaphore/","weight":0,"wordcount":962},{"author":null,"categories":["WORK"],"content":null,"date":1593086248,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1593086248,"objectID":"489e50cb5e065e438edeca6946c66010","permalink":"https://zntzhang.github.io/post/2020-06-25-spring%E5%AE%B9%E5%99%A8%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E8%A7%A3%E5%86%B3%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96%E9%97%AE%E9%A2%98%E7%9A%84%E5%88%86%E6%9E%90/","publishdate":"2020-06-25T11:57:28Z","readingtime":5,"relpermalink":"/post/2020-06-25-spring%E5%AE%B9%E5%99%A8%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E8%A7%A3%E5%86%B3%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96%E9%97%AE%E9%A2%98%E7%9A%84%E5%88%86%E6%9E%90/","section":"post","summary":"Bean 容器找到配置文件中 Spring Bean 的定义。（beanDefintion） Bean 容器利用 Java Reflection API 创建一个Bean的实例。(执行构造方法) 如果涉及到一些属性值 利","tags":["spring"],"title":"Spring容器初始化和解决循环依赖问题的分析","type":"post","url":"/post/2020-06-25-spring%E5%AE%B9%E5%99%A8%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E8%A7%A3%E5%86%B3%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96%E9%97%AE%E9%A2%98%E7%9A%84%E5%88%86%E6%9E%90/","weight":0,"wordcount":2170},{"author":null,"categories":["WORK"],"content":null,"date":1586471651,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1586471651,"objectID":"80d8a1e26a8b787024334bdfe8ab3cea","permalink":"https://zntzhang.github.io/post/2020-04-09-%E9%A1%B9%E7%9B%AE%E9%9B%86%E6%88%90swagger%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99-error-creating-bean-with-name-webmvcrequesthandlerprovider/","publishdate":"2020-04-09T22:34:11Z","readingtime":2,"relpermalink":"/post/2020-04-09-%E9%A1%B9%E7%9B%AE%E9%9B%86%E6%88%90swagger%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99-error-creating-bean-with-name-webmvcrequesthandlerprovider/","section":"post","summary":"最近项目集成了swagger以后启动一直报错 org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name \u0026#39;webMvcRequestHandlerProvider\u0026#39; defined in URL [jar:file:/Users/jasonfeng/.m2/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor argument with index 0 of type [java.util.List]: : No qualifying bean of type [org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping] found for dependency [collection of org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping]: expected at least 1 bean which qualifies as autowire candidate for this","tags":["java"],"title":"项目集成swagger启动报错 Error creating bean with name webMvcRequestHandlerProvider","type":"post","url":"/post/2020-04-09-%E9%A1%B9%E7%9B%AE%E9%9B%86%E6%88%90swagger%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99-error-creating-bean-with-name-webmvcrequesthandlerprovider/","weight":0,"wordcount":532},{"author":null,"categories":["WORK"],"content":null,"date":1586471600,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1586471600,"objectID":"0429f68196b68dd321a64f165ef60fe5","permalink":"https://zntzhang.github.io/post/2020-04-09-%E6%B5%85%E5%85%A5%E6%B5%85%E5%87%BAnetty%E4%B8%89-netty%E7%BA%BF%E7%A8%8B%E6%A8%A1%E5%9E%8B/","publishdate":"2020-04-09T22:33:20Z","readingtime":3,"relpermalink":"/post/2020-04-09-%E6%B5%85%E5%85%A5%E6%B5%85%E5%87%BAnetty%E4%B8%89-netty%E7%BA%BF%E7%A8%8B%E6%A8%A1%E5%9E%8B/","section":"post","summary":"实际上Netty线程模型就是Reactor模式的一个实现，而Reactor模式又是什么呢？ Reactor模型 Reactor模式是基于事件驱动","tags":["netty"],"title":"浅入浅出Netty（三） Netty线程模型","type":"post","url":"/post/2020-04-09-%E6%B5%85%E5%85%A5%E6%B5%85%E5%87%BAnetty%E4%B8%89-netty%E7%BA%BF%E7%A8%8B%E6%A8%A1%E5%9E%8B/","weight":0,"wordcount":1256},{"author":null,"categories":["WORK"],"content":null,"date":1586471558,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1586471558,"objectID":"827ea5e277aa3c137909de9e0a980c70","permalink":"https://zntzhang.github.io/post/2020-04-09-%E6%B5%85%E5%85%A5%E6%B5%85%E5%87%BAnetty%E4%BA%8C-netty/","publishdate":"2020-04-09T22:32:38Z","readingtime":4,"relpermalink":"/post/2020-04-09-%E6%B5%85%E5%85%A5%E6%B5%85%E5%87%BAnetty%E4%BA%8C-netty/","section":"post","summary":"这一遍先简单的讲一些netty是如何实现nio的代码的，后面会详细讲述netty原理 用一句简单的话来说就是：Netty 封装了 JDK 的 NIO，让你","tags":["netty"],"title":"浅入浅出Netty（二） Netty","type":"post","url":"/post/2020-04-09-%E6%B5%85%E5%85%A5%E6%B5%85%E5%87%BAnetty%E4%BA%8C-netty/","weight":0,"wordcount":1749},{"author":null,"categories":["WORK"],"content":null,"date":1585432368,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1585432368,"objectID":"d206bf22a7d6d55b53774a60e1cc4d33","permalink":"https://zntzhang.github.io/post/2020-03-28-%E6%B5%85%E5%85%A5%E6%B5%85%E5%87%BAnetty%E4%B8%80bio%E4%B8%8Enio/","publishdate":"2020-03-28T21:52:48Z","readingtime":4,"relpermalink":"/post/2020-03-28-%E6%B5%85%E5%85%A5%E6%B5%85%E5%87%BAnetty%E4%B8%80bio%E4%B8%8Enio/","section":"post","summary":"在开始了解 Netty 是什么之前，我们先来回顾一下，如果我们需要实现一个客户端与服务端通信的程序，使用传统的Socket通信，应该如何来实现？ public class BIOServer {","tags":["netty"],"title":"浅入浅出Netty（一）BIO与NIO","type":"post","url":"/post/2020-03-28-%E6%B5%85%E5%85%A5%E6%B5%85%E5%87%BAnetty%E4%B8%80bio%E4%B8%8Enio/","weight":0,"wordcount":1672},{"author":null,"categories":["WORK"],"content":null,"date":1583878194,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1583878194,"objectID":"63d0dd0c312a4e74976a8493b885b46d","permalink":"https://zntzhang.github.io/post/2020-03-10-%E6%87%92%E4%BA%BA%E5%A6%82%E4%BD%95%E7%94%A8%E7%88%AC%E8%99%AB%E6%89%B9%E9%87%8F%E6%8A%8Acsdn%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%AF%BC%E5%87%BA%E6%88%90markdown%E6%96%87%E4%BB%B6/","publishdate":"2020-03-10T22:09:54Z","readingtime":3,"relpermalink":"/post/2020-03-10-%E6%87%92%E4%BA%BA%E5%A6%82%E4%BD%95%E7%94%A8%E7%88%AC%E8%99%AB%E6%89%B9%E9%87%8F%E6%8A%8Acsdn%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%AF%BC%E5%87%BA%E6%88%90markdown%E6%96%87%E4%BB%B6/","section":"post","summary":"最近博主搞了一个博客网站，但是遇到一个头疼的事情，就是要把以前写在csdn 上的博客批量导出成markdown文件，但是csdn上只支持单个导","tags":["爬虫"],"title":"懒人如何用爬虫批量把CSDN的博客导出成markdown文件","type":"post","url":"/post/2020-03-10-%E6%87%92%E4%BA%BA%E5%A6%82%E4%BD%95%E7%94%A8%E7%88%AC%E8%99%AB%E6%89%B9%E9%87%8F%E6%8A%8Acsdn%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%AF%BC%E5%87%BA%E6%88%90markdown%E6%96%87%E4%BB%B6/","weight":0,"wordcount":1057},{"author":null,"categories":["WORK"],"content":null,"date":1582627843,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1582627843,"objectID":"ae8ca78656de19d3acb3fc16516735c7","permalink":"https://zntzhang.github.io/post/2020-02-25-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/","publishdate":"2020-02-25T10:50:43Z","readingtime":3,"relpermalink":"/post/2020-02-25-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/","section":"post","summary":"1.定义 单例模式是Java中比较常见的创建型设计模式，他的核心是确保一个类在任何情况下都绝对只有一个实例，并提供一个全局访问点。 如何确保一个","tags":["设计模式"],"title":"设计模式之单例模式","type":"post","url":"/post/2020-02-25-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":1210},{"author":null,"categories":["WORK"],"content":null,"date":1582627789,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1582627789,"objectID":"cf9144871106058a7e0752f3fd9ca5ca","permalink":"https://zntzhang.github.io/post/2020-02-25-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/","publishdate":"2020-02-25T10:49:49Z","readingtime":2,"relpermalink":"/post/2020-02-25-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/","section":"post","summary":"1.定义 属于类创建型模式。在简单工厂模式中，可以根据参数的不同返回不同类的实例。简单工厂模式专门定义一个类来负责创建其他类的实例，被创建的实","tags":["设计模式"],"title":"设计模式之简单工厂模式","type":"post","url":"/post/2020-02-25-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":752},{"author":null,"categories":["WORK"],"content":null,"date":1581700507,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1581700507,"objectID":"4c7bdf8eb38f945fc984225efc5f9b24","permalink":"https://zntzhang.github.io/post/2020-02-14-%E4%BD%BF%E7%94%A8%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%90%8E%E5%BC%95%E5%8F%91%E7%9A%84%E8%A1%80%E6%A1%88/","publishdate":"2020-02-14T17:15:07Z","readingtime":2,"relpermalink":"/post/2020-02-14-%E4%BD%BF%E7%94%A8%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%90%8E%E5%BC%95%E5%8F%91%E7%9A%84%E8%A1%80%E6%A1%88/","section":"post","summary":"我们公司有一个项目，用到了消息队列，经常会遇到很多坑，难以排查，下面我详细描述一下心路历程。 首先介绍一下这个项目，简单的讲，有A,B两个工程","tags":["mq"],"title":"使用消息队列后引发的血案","type":"post","url":"/post/2020-02-14-%E4%BD%BF%E7%94%A8%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%90%8E%E5%BC%95%E5%8F%91%E7%9A%84%E8%A1%80%E6%A1%88/","weight":0,"wordcount":959},{"author":null,"categories":["WORK"],"content":null,"date":1563127333,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1563127333,"objectID":"ba9e2ec962268861cb3100637426415d","permalink":"https://zntzhang.github.io/post/2019-07-14-java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%8E%9F%E5%AD%90%E6%80%A7%E5%8F%AF%E8%A7%81%E6%80%A7%E6%9C%89%E5%BA%8F%E6%80%A7synchronizedcasvolatilethreadlocal%E7%AC%94%E8%AE%B0/","publishdate":"2019-07-14T18:02:13Z","readingtime":7,"relpermalink":"/post/2019-07-14-java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%8E%9F%E5%AD%90%E6%80%A7%E5%8F%AF%E8%A7%81%E6%80%A7%E6%9C%89%E5%BA%8F%E6%80%A7synchronizedcasvolatilethreadlocal%E7%AC%94%E8%AE%B0/","section":"post","summary":"自己网上总结了一些多线程并发的一些文章，如有错误请指教！ 多线程的三大特性 一、原子性 原子是世界上的最小单位，具有不可分割性。比如 a=0；（a非","tags":["并发","java","锁","并发","多线程","Java"],"title":"Java并发编程（原子性、可见性、有序性、synchronized、CAS、volatile、ThreadLocal）笔记","type":"post","url":"/post/2019-07-14-java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%8E%9F%E5%AD%90%E6%80%A7%E5%8F%AF%E8%A7%81%E6%80%A7%E6%9C%89%E5%BA%8F%E6%80%A7synchronizedcasvolatilethreadlocal%E7%AC%94%E8%AE%B0/","weight":0,"wordcount":3370},{"author":null,"categories":["WORK"],"content":null,"date":1561675391,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1561675391,"objectID":"a415b910eb7f1a5854854652c1bd61d6","permalink":"https://zntzhang.github.io/post/2019-06-27-pagehelper%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84threadlocal%E5%B0%8F%E5%9D%91/","publishdate":"2019-06-27T22:43:11Z","readingtime":2,"relpermalink":"/post/2019-06-27-pagehelper%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84threadlocal%E5%B0%8F%E5%9D%91/","section":"post","summary":"最近写代码刚好碰到ThreadLocal的小坑，顺便学习了一波ThreadLocal，拿出来分享一下 ThreadLocal什么时候会出现线程","tags":["java","并发"],"title":"PageHelper中遇到的ThreadLocal小坑","type":"post","url":"/post/2019-06-27-pagehelper%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84threadlocal%E5%B0%8F%E5%9D%91/","weight":0,"wordcount":891},{"author":null,"categories":["WORK"],"content":null,"date":1558454976,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1558454976,"objectID":"fb1d0cad2d16a8177c6b08406b82844c","permalink":"https://zntzhang.github.io/post/2019-05-21-%E5%90%8C%E4%B8%80%E4%B8%AA%E7%B1%BB%E7%9A%84%E4%B8%8D%E5%90%8C%E6%96%B9%E6%B3%95a%E6%96%B9%E6%B3%95%E6%B2%A1%E6%9C%89transactionalb%E6%96%B9%E6%B3%95%E6%9C%89transactionala%E8%B0%83%E7%94%A8b%E6%96%B9%E6%B3%95%E4%BA%8B%E5%8A%A1%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8/","publishdate":"2019-05-21T16:09:36Z","readingtime":2,"relpermalink":"/post/2019-05-21-%E5%90%8C%E4%B8%80%E4%B8%AA%E7%B1%BB%E7%9A%84%E4%B8%8D%E5%90%8C%E6%96%B9%E6%B3%95a%E6%96%B9%E6%B3%95%E6%B2%A1%E6%9C%89transactionalb%E6%96%B9%E6%B3%95%E6%9C%89transactionala%E8%B0%83%E7%94%A8b%E6%96%B9%E6%B3%95%E4%BA%8B%E5%8A%A1%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8/","section":"post","summary":"问题： 同一个类的不同方法,A方法没有@Transactional，B方法有@Transactional,A调用B方法，事务不起作用 原理解析：","tags":["java"],"title":"同一个类的不同方法,A方法没有@Transactional，B方法有@Transactional,A调用B方法，事务不起作用","type":"post","url":"/post/2019-05-21-%E5%90%8C%E4%B8%80%E4%B8%AA%E7%B1%BB%E7%9A%84%E4%B8%8D%E5%90%8C%E6%96%B9%E6%B3%95a%E6%96%B9%E6%B3%95%E6%B2%A1%E6%9C%89transactionalb%E6%96%B9%E6%B3%95%E6%9C%89transactionala%E8%B0%83%E7%94%A8b%E6%96%B9%E6%B3%95%E4%BA%8B%E5%8A%A1%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8/","weight":0,"wordcount":701},{"author":null,"categories":["WORK"],"content":null,"date":1550573583,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1550573583,"objectID":"88eb019d945bc954f290d588d6b462e7","permalink":"https://zntzhang.github.io/post/2019-02-19-%E6%9F%90%E4%B8%AA%E8%A1%A8%E6%9C%89%E8%BF%91%E5%8D%83%E4%B8%87%E6%95%B0%E6%8D%AEcrud%E6%AF%94%E8%BE%83%E6%85%A2%E5%A6%82%E4%BD%95%E4%BC%98%E5%8C%96%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E4%BA%86%E6%98%AF%E6%80%8E%E4%B9%88%E5%81%9A%E7%9A%84%E5%88%86%E8%A1%A8%E5%88%86%E5%BA%93%E4%BA%86%E6%9C%89%E4%BB%80%E4%B9%88%E9%97%AE%E9%A2%98%E6%9C%89%E7%94%A8%E5%88%B0%E4%B8%AD%E9%97%B4%E4%BB%B6%E4%B9%88%E4%BB%96%E4%BB%AC%E7%9A%84%E5%8E%9F%E7%90%86%E7%9F%A5%E9%81%93%E4%B9%88/","publishdate":"2019-02-19T10:53:03Z","readingtime":4,"relpermalink":"/post/2019-02-19-%E6%9F%90%E4%B8%AA%E8%A1%A8%E6%9C%89%E8%BF%91%E5%8D%83%E4%B8%87%E6%95%B0%E6%8D%AEcrud%E6%AF%94%E8%BE%83%E6%85%A2%E5%A6%82%E4%BD%95%E4%BC%98%E5%8C%96%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E4%BA%86%E6%98%AF%E6%80%8E%E4%B9%88%E5%81%9A%E7%9A%84%E5%88%86%E8%A1%A8%E5%88%86%E5%BA%93%E4%BA%86%E6%9C%89%E4%BB%80%E4%B9%88%E9%97%AE%E9%A2%98%E6%9C%89%E7%94%A8%E5%88%B0%E4%B8%AD%E9%97%B4%E4%BB%B6%E4%B9%88%E4%BB%96%E4%BB%AC%E7%9A%84%E5%8E%9F%E7%90%86%E7%9F%A5%E9%81%93%E4%B9%88/","section":"post","summary":"数据千万级别之多，占用的存储空间也比较大，可想而知它不会存储在一块连续的物理空间上，而是链式存储在多个碎片的物理空间上。可能对于长字符串的比","tags":["数据库"],"title":"某个表有近千万数据，CRUD比较慢，如何优化？分库分表了是怎么做的？分表分库了有什么问题？有用到中间件么?他们的原理知道么？","type":"post","url":"/post/2019-02-19-%E6%9F%90%E4%B8%AA%E8%A1%A8%E6%9C%89%E8%BF%91%E5%8D%83%E4%B8%87%E6%95%B0%E6%8D%AEcrud%E6%AF%94%E8%BE%83%E6%85%A2%E5%A6%82%E4%BD%95%E4%BC%98%E5%8C%96%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E4%BA%86%E6%98%AF%E6%80%8E%E4%B9%88%E5%81%9A%E7%9A%84%E5%88%86%E8%A1%A8%E5%88%86%E5%BA%93%E4%BA%86%E6%9C%89%E4%BB%80%E4%B9%88%E9%97%AE%E9%A2%98%E6%9C%89%E7%94%A8%E5%88%B0%E4%B8%AD%E9%97%B4%E4%BB%B6%E4%B9%88%E4%BB%96%E4%BB%AC%E7%9A%84%E5%8E%9F%E7%90%86%E7%9F%A5%E9%81%93%E4%B9%88/","weight":0,"wordcount":1933},{"author":null,"categories":["WORK"],"content":null,"date":1550416885,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1550416885,"objectID":"57e900635df50206e04ff6ee639094f9","permalink":"https://zntzhang.github.io/post/2019-02-17-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E4%BA%94%E7%AB%A0-%E5%AE%89%E8%A3%85mysql/","publishdate":"2019-02-17T15:21:25Z","readingtime":2,"relpermalink":"/post/2019-02-17-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E4%BA%94%E7%AB%A0-%E5%AE%89%E8%A3%85mysql/","section":"post","summary":"1.下载MySQL源安装包 wget http://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm 安装MySql源 yum -y install mysql57-community-release-el7-11.noarch.rpm 查看一下安装效果 yum repolist enabled | grep mysql.* 2.安装MySQL服务器 yum install mysql-community-server 中间会弹出是与否的选择，选择","tags":["linux","数据库"],"title":"超详细，从零开始搭建阿里云服务器（centos7）第五章 安装mysql","type":"post","url":"/post/2019-02-17-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E4%BA%94%E7%AB%A0-%E5%AE%89%E8%A3%85mysql/","weight":0,"wordcount":684},{"author":null,"categories":["WORK"],"content":null,"date":1550072535,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1550072535,"objectID":"9b01bba3ca712d1059f601346eb87364","permalink":"https://zntzhang.github.io/post/2019-02-13-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E5%AE%89%E8%A3%85tomcat/","publishdate":"2019-02-13T15:42:15Z","readingtime":2,"relpermalink":"/post/2019-02-13-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E5%AE%89%E8%A3%85tomcat/","section":"post","summary":"下面到了最关键的一步，安装tomcat过程中也是不断地爬坑。。 1.下载并上传tomcat压缩包 跟上一章类似，不细说了，我安装在了/home/","tags":["linux"],"title":"超详细，从零开始搭建阿里云服务器（centos7）第四章 安装tomcat","type":"post","url":"/post/2019-02-13-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E5%AE%89%E8%A3%85tomcat/","weight":0,"wordcount":699},{"author":null,"categories":["WORK"],"content":null,"date":1550066169,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1550066169,"objectID":"839e9713843de919d1c58ffcafb86e82","permalink":"https://zntzhang.github.io/post/2019-02-13-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AE%89%E8%A3%85jdk/","publishdate":"2019-02-13T13:56:09Z","readingtime":1,"relpermalink":"/post/2019-02-13-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AE%89%E8%A3%85jdk/","section":"post","summary":"1.下载jdk 首先去oracle官网下载你所需要版本的jdk，我下的是jdk1.8 https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html 2.上传jdk到云服务器 上传文件的方式有很多，这里不细说","tags":["linux"],"title":"超详细，从零开始搭建阿里云服务器（centos7）第三章 安装jdk","type":"post","url":"/post/2019-02-13-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AE%89%E8%A3%85jdk/","weight":0,"wordcount":444},{"author":null,"categories":["WORK"],"content":null,"date":1549992674,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1549992674,"objectID":"60b6c90df9550bf3523d1318db6ebb66","permalink":"https://zntzhang.github.io/post/2019-02-12-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7/","publishdate":"2019-02-12T17:31:14Z","readingtime":2,"relpermalink":"/post/2019-02-12-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7/","section":"post","summary":"1.创建用户 远程连接完后而第一件事就是创建自己的用户，因为root用户是最高权限的超级管理员，生产上不可能使用它， adduser zntzhang 创建用户 passwd zntzhang 设置密码 这","tags":["linux"],"title":"超详细，从零开始搭建阿里云服务器（centos7）第二章 创建用户","type":"post","url":"/post/2019-02-12-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7/","weight":0,"wordcount":574},{"author":null,"categories":["WORK"],"content":null,"date":1549990674,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1549990674,"objectID":"b342d6cdf4ccfa4d3537a1cf6a328320","permalink":"https://zntzhang.github.io/post/2019-02-12-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E4%B8%80%E7%AB%A0-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/","publishdate":"2019-02-12T16:57:54Z","readingtime":1,"relpermalink":"/post/2019-02-12-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E4%B8%80%E7%AB%A0-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/","section":"post","summary":"博主前两天买了3年最低配的阿里云玩玩，这次写一个笔记记录下自己搭服务器所遇到的坑。 1.购买阿里云 首先在阿里云官网 https://www.al","tags":["linux"],"title":"超详细，从零开始搭建阿里云服务器（centos7）第一章 远程连接","type":"post","url":"/post/2019-02-12-%E8%B6%85%E8%AF%A6%E7%BB%86%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centos7%E7%AC%AC%E4%B8%80%E7%AB%A0-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/","weight":0,"wordcount":300},{"author":null,"categories":["WORK"],"content":null,"date":1542124199,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1542124199,"objectID":"d50a1ae05de25d74b6371bff14d3868e","permalink":"https://zntzhang.github.io/post/2018-11-13-mysql%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","publishdate":"2018-11-13T15:49:59Z","readingtime":3,"relpermalink":"/post/2018-11-13-mysql%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","section":"post","summary":"InnoDB 支持事务 支持外键 对比MyISAM引擎，写的处理效率会差一些，并且会占用更多的磁盘空间以保留数据和索引 MyISAM 不支持事务 不支持外键 优势是访问速度快","tags":["数据库"],"title":"MySql存储引擎和数据结构","type":"post","url":"/post/2018-11-13-mysql%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","weight":0,"wordcount":1413},{"author":null,"categories":["WORK"],"content":null,"date":1540208285,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1540208285,"objectID":"4022b23f4dcfcf0a1182f0ff25a6e067","permalink":"https://zntzhang.github.io/post/2018-10-22-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E9%94%81%E4%B8%8E%E4%BA%8B%E5%8A%A1/","publishdate":"2018-10-22T11:38:05Z","readingtime":9,"relpermalink":"/post/2018-10-22-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E9%94%81%E4%B8%8E%E4%BA%8B%E5%8A%A1/","section":"post","summary":"前言: 我们都知道事务的几种性质，数据库为了维护这些性质，尤其是一致性和隔离性，一般使用加锁这种方式。同时数据库又是个高并发的应用，同一时间会","tags":["数据库","锁"],"title":"数据库之锁与事务","type":"post","url":"/post/2018-10-22-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E9%94%81%E4%B8%8E%E4%BA%8B%E5%8A%A1/","weight":0,"wordcount":4462},{"author":null,"categories":["WORK"],"content":null,"date":1537550096,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1537550096,"objectID":"d5477d12b35842059c191cf378e1953f","permalink":"https://zntzhang.github.io/post/2018-09-21-git%E4%B8%ADreset%E6%93%8D%E4%BD%9C%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93/","publishdate":"2018-09-21T17:14:56Z","readingtime":1,"relpermalink":"/post/2018-09-21-git%E4%B8%ADreset%E6%93%8D%E4%BD%9C%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93/","section":"post","summary":"首先，git 本地提交，会经过三个步骤。 这三个步骤的流程不多做解释 工作区 \u0026ndash;\u0026gt; 暂存区 \u0026ndash;\u0026gt;版本库 然后 git reset –soft 可以把版本库上的","tags":["java"],"title":"git中reset操作的三种模式（总结）","type":"post","url":"/post/2018-09-21-git%E4%B8%ADreset%E6%93%8D%E4%BD%9C%E7%9A%84%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93/","weight":0,"wordcount":148},{"author":null,"categories":["WORK"],"content":null,"date":1527798111,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1527798111,"objectID":"190094bde5837a7b852c5c2be4170fa1","permalink":"https://zntzhang.github.io/post/2018-05-31-spring%E4%B8%ADservice%E8%B0%83%E7%94%A8service%E5%A6%82%E4%BD%95%E4%BF%9D%E6%8C%81%E4%BA%8B%E5%8A%A1%E4%B8%80%E8%87%B4/","publishdate":"2018-05-31T20:21:51Z","readingtime":1,"relpermalink":"/post/2018-05-31-spring%E4%B8%ADservice%E8%B0%83%E7%94%A8service%E5%A6%82%E4%BD%95%E4%BF%9D%E6%8C%81%E4%BA%8B%E5%8A%A1%E4%B8%80%E8%87%B4/","section":"post","summary":"在使用SPRING的事务控制时，事务一般都是加在SERVICE层的，这个时候如果一个SERVICE调用另一个SERVICE时如何保持事务一致","tags":["java"],"title":"spring中service调用service如何保持事务一致","type":"post","url":"/post/2018-05-31-spring%E4%B8%ADservice%E8%B0%83%E7%94%A8service%E5%A6%82%E4%BD%95%E4%BF%9D%E6%8C%81%E4%BA%8B%E5%8A%A1%E4%B8%80%E8%87%B4/","weight":0,"wordcount":480},{"author":null,"categories":["WORK"],"content":null,"date":1524223818,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1524223818,"objectID":"d2e9a8b80babd0454534f2a2176d0498","permalink":"https://zntzhang.github.io/post/2018-04-20-integer%E6%AF%94%E8%BE%83-%E4%B8%8Eequals/","publishdate":"2018-04-20T11:30:18Z","readingtime":2,"relpermalink":"/post/2018-04-20-integer%E6%AF%94%E8%BE%83-%E4%B8%8Eequals/","section":"post","summary":"class Test { public static void main(String[] args) { Integer i1 = new Integer(5); Integer i2 = new Integer(5); System.out.println(i1 == i2); //false (情况，即new的id，而不是=的id赋值) Integer i3 = 5; Integer i4 = 5; System.out.println(i3 == i4); //true } } 所以判断Integer","tags":["java"],"title":"Integer比较 ==与equals","type":"post","url":"/post/2018-04-20-integer%E6%AF%94%E8%BE%83-%E4%B8%8Eequals/","weight":0,"wordcount":518},{"author":null,"categories":["WORK"],"content":null,"date":1518011088,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1518011088,"objectID":"340502c551450f532074e2a2b8587c10","permalink":"https://zntzhang.github.io/post/2018-02-07-git%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/","publishdate":"2018-02-07T13:44:48Z","readingtime":1,"relpermalink":"/post/2018-02-07-git%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/","section":"post","summary":"1.git整合idea 2.在IDEA中实战Git","tags":["java"],"title":"git使用笔记","type":"post","url":"/post/2018-02-07-git%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/","weight":0,"wordcount":24},{"author":null,"categories":["WORK"],"content":null,"date":1514042743,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1514042743,"objectID":"dcfaac2038e05b080af99dc87fed9b05","permalink":"https://zntzhang.github.io/post/2017-12-23-mycat%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/","publishdate":"2017-12-23T15:25:43Z","readingtime":2,"relpermalink":"/post/2017-12-23-mycat%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/","section":"post","summary":"1.为什么要使用MyCAT? MyCAT是mysql中间件,一个可以视为MySQL集群的企业级数据库，用来替代昂贵的Oracle集群 2.MyC","tags":["数据库","数据库","mysql","mycat","分片"],"title":"MyCAT简单笔记","type":"post","url":"/post/2017-12-23-mycat%E7%AE%80%E5%8D%95%E7%AC%94%E8%AE%B0/","weight":0,"wordcount":658},{"author":null,"categories":["WORK"],"content":null,"date":1514021111,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1514021111,"objectID":"cbd43403f40d7039ac2f58f356bb5d3f","permalink":"https://zntzhang.github.io/post/2017-12-23-spring-aop%E6%8E%A7%E5%88%B6%E4%BA%8B%E5%8A%A1/","publishdate":"2017-12-23T09:25:11Z","readingtime":3,"relpermalink":"/post/2017-12-23-spring-aop%E6%8E%A7%E5%88%B6%E4%BA%8B%E5%8A%A1/","section":"post","summary":"一. spring事务管理的两种方式 1. 编程式事务 自己写事务处理的类，然后调用(较少使用) 2. 声明式事务 2.1 使用基于注解的AOP事务管理 @Trans","tags":["java","spring","aop","事务","java","异常"],"title":"Spring AOP控制事务","type":"post","url":"/post/2017-12-23-spring-aop%E6%8E%A7%E5%88%B6%E4%BA%8B%E5%8A%A1/","weight":0,"wordcount":1068},{"author":null,"categories":["WORK"],"content":null,"date":1513420252,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1513420252,"objectID":"76a4294f7789ea81991ab67b1513e709","permalink":"https://zntzhang.github.io/post/2017-12-16-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BB%BA%E7%AB%8B%E7%B4%A2%E5%BC%95%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9/","publishdate":"2017-12-16T10:30:52Z","readingtime":2,"relpermalink":"/post/2017-12-16-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BB%BA%E7%AB%8B%E7%B4%A2%E5%BC%95%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9/","section":"post","summary":"创建索引可以大大提高系统的性能: 第一，通过创建唯一性索引，可以保证数据库表中每一行数据的唯一性。 第二，可以大大加快数据的检索速度，这也是创建","tags":["数据库","数据库","索引","数据","优化","性能"],"title":"数据库建立索引的优缺点","type":"post","url":"/post/2017-12-16-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BB%BA%E7%AB%8B%E7%B4%A2%E5%BC%95%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9/","weight":0,"wordcount":605},{"author":null,"categories":["WORK"],"content":null,"date":1513419832,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1513419832,"objectID":"863f602b8d617f82b6b2a78b3771e9fc","permalink":"https://zntzhang.github.io/post/2017-12-16-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAssm/","publishdate":"2017-12-16T10:23:52Z","readingtime":2,"relpermalink":"/post/2017-12-16-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAssm/","section":"post","summary":"下面是我搭建框架时参考的文章以及自己的觉得重要的笔记,如果大家只是搭建框架,前三步就足够了. http://blog.csdn.net/gebitan505/article/details/44455235/ 2.配置事务管理 http://blog.csdn.net/zhshulin/article/details/38108159 3.log4j配置 http://blog.csdn.net/github_32658299/article/details/54288923 4.SS","tags":["java","框架","java","ssm"],"title":"从零开始搭建SSM","type":"post","url":"/post/2017-12-16-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAssm/","weight":0,"wordcount":871},{"author":null,"categories":["WORK"],"content":null,"date":1513352755,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1513352755,"objectID":"0ae1d21cd6627897b3f31b37b2296a7b","permalink":"https://zntzhang.github.io/post/2017-12-15-functionjqueryjquery.extendjquery.fn.extend%E7%9A%84%E5%90%AB%E4%B9%89%E4%B8%8E%E4%B9%8B%E9%97%B4%E7%9A%84%E8%81%94%E7%B3%BB%E8%BF%90%E7%94%A8/","publishdate":"2017-12-15T15:45:55Z","readingtime":2,"relpermalink":"/post/2017-12-15-functionjqueryjquery.extendjquery.fn.extend%E7%9A%84%E5%90%AB%E4%B9%89%E4%B8%8E%E4%B9%8B%E9%97%B4%E7%9A%84%E8%81%94%E7%B3%BB%E8%BF%90%E7%94%A8/","section":"post","summary":"1. (function($){})(jQuery)的含义 首先讲(function(){})();的含义，它是一个立即执行函数；相当于先申明一个","tags":["jquery/js","jquery"],"title":"(function($){})(jQuery)、jQuery.extend({})、jQuery.fn.extend()的含义与之间的联系运用","type":"post","url":"/post/2017-12-15-functionjqueryjquery.extendjquery.fn.extend%E7%9A%84%E5%90%AB%E4%B9%89%E4%B8%8E%E4%B9%8B%E9%97%B4%E7%9A%84%E8%81%94%E7%B3%BB%E8%BF%90%E7%94%A8/","weight":0,"wordcount":761},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"about/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8576ec274c98b3831668a172fa632d80","permalink":"https://zntzhang.github.io/about/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/about/","section":"","summary":"","tags":null,"title":"","type":"page","url":"/about/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"notes/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"1ede8046f9c3a02d422dea7bbf324e64","permalink":"https://zntzhang.github.io/notes/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/notes/","section":"","summary":" Root Level 1 Level 2 Level 2 Level 3 Level 3 Level 4 Level 5 Level 6 Level 1 Level 2 Level 2 Level 1 Level 2 Level 2 Level 1 Level 2 Level 2 Level 1 Level 2 Level 2 ","tags":null,"title":"","type":"page","url":"/notes/","weight":0,"wordcount":41},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"search/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8946788897930c0c0c39fbfcd30ff2e4","permalink":"https://zntzhang.github.io/search/placeholder/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/placeholder/","section":"search","summary":"","tags":null,"title":"","type":"search","url":"/search/placeholder/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":"Archive of historical posts.","date":-62135596800,"description":"Archive of historical posts.","dir":"archive/","excerpt_html":"Archive of historical posts.","excerpt_text":"Archive of historical posts.","expirydate":-62135596800,"fuzzywordcount":100,"html":"Archive of historical posts.","keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"a06e5ce9eca4c3260843078104889780","permalink":"https://zntzhang.github.io/archive/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/archive/","section":"","summary":"","tags":null,"title":"Posts Archive","type":"archive","url":"/archive/","weight":0,"wordcount":0}]